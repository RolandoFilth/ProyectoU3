#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Taqueria.Linq.Data.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Taqueria_Tadeos")]
	public partial class DcGeneralDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertEmpleado(Empleado instance);
    partial void UpdateEmpleado(Empleado instance);
    partial void DeleteEmpleado(Empleado instance);
    partial void InsertProducto(Producto instance);
    partial void UpdateProducto(Producto instance);
    partial void DeleteProducto(Producto instance);
    partial void InsertProductoSucursal(ProductoSucursal instance);
    partial void UpdateProductoSucursal(ProductoSucursal instance);
    partial void DeleteProductoSucursal(ProductoSucursal instance);
    partial void InsertProductosVenta(ProductosVenta instance);
    partial void UpdateProductosVenta(ProductosVenta instance);
    partial void DeleteProductosVenta(ProductosVenta instance);
    partial void InsertPuesto(Puesto instance);
    partial void UpdatePuesto(Puesto instance);
    partial void DeletePuesto(Puesto instance);
    partial void InsertSexo(Sexo instance);
    partial void UpdateSexo(Sexo instance);
    partial void DeleteSexo(Sexo instance);
    partial void InsertSucursal(Sucursal instance);
    partial void UpdateSucursal(Sucursal instance);
    partial void DeleteSucursal(Sucursal instance);
    partial void InsertTipoAlimento(TipoAlimento instance);
    partial void UpdateTipoAlimento(TipoAlimento instance);
    partial void DeleteTipoAlimento(TipoAlimento instance);
    partial void InsertTipoCarne(TipoCarne instance);
    partial void UpdateTipoCarne(TipoCarne instance);
    partial void DeleteTipoCarne(TipoCarne instance);
    partial void InsertTipoProducto(TipoProducto instance);
    partial void UpdateTipoProducto(TipoProducto instance);
    partial void DeleteTipoProducto(TipoProducto instance);
    partial void InsertTipoUsuario(TipoUsuario instance);
    partial void UpdateTipoUsuario(TipoUsuario instance);
    partial void DeleteTipoUsuario(TipoUsuario instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertVenta(Venta instance);
    partial void UpdateVenta(Venta instance);
    partial void DeleteVenta(Venta instance);
    #endregion
		
		public DcGeneralDataContext() : 
				base(global::Taqueria.Linq.Data.Properties.Settings.Default.Taqueria_TadeosConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DcGeneralDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcGeneralDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcGeneralDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcGeneralDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Empleado> Empleado
		{
			get
			{
				return this.GetTable<Empleado>();
			}
		}
		
		public System.Data.Linq.Table<Producto> Producto
		{
			get
			{
				return this.GetTable<Producto>();
			}
		}
		
		public System.Data.Linq.Table<ProductoSucursal> ProductoSucursal
		{
			get
			{
				return this.GetTable<ProductoSucursal>();
			}
		}
		
		public System.Data.Linq.Table<ProductosVenta> ProductosVenta
		{
			get
			{
				return this.GetTable<ProductosVenta>();
			}
		}
		
		public System.Data.Linq.Table<Puesto> Puesto
		{
			get
			{
				return this.GetTable<Puesto>();
			}
		}
		
		public System.Data.Linq.Table<Sexo> Sexo
		{
			get
			{
				return this.GetTable<Sexo>();
			}
		}
		
		public System.Data.Linq.Table<Sucursal> Sucursal
		{
			get
			{
				return this.GetTable<Sucursal>();
			}
		}
		
		public System.Data.Linq.Table<TipoAlimento> TipoAlimento
		{
			get
			{
				return this.GetTable<TipoAlimento>();
			}
		}
		
		public System.Data.Linq.Table<TipoCarne> TipoCarne
		{
			get
			{
				return this.GetTable<TipoCarne>();
			}
		}
		
		public System.Data.Linq.Table<TipoProducto> TipoProducto
		{
			get
			{
				return this.GetTable<TipoProducto>();
			}
		}
		
		public System.Data.Linq.Table<TipoUsuario> TipoUsuario
		{
			get
			{
				return this.GetTable<TipoUsuario>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Venta> Venta
		{
			get
			{
				return this.GetTable<Venta>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empleado")]
	public partial class Empleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEmpleado;
		
		private string _Nombre;
		
		private string _APaterno;
		
		private string _AMaterno;
		
		private string _CURP;
		
		private System.DateTime _FechaNacimiento;
		
		private System.Nullable<int> _IdSucursal;
		
		private System.Nullable<int> _Sexo;
		
		private System.Nullable<int> _Puesto;
		
		private EntitySet<Usuario> _Usuario;
		
		private EntitySet<Venta> _Venta;
		
		private EntityRef<Puesto> _Puesto1;
		
		private EntityRef<Sexo> _Sexo1;
		
		private EntityRef<Sucursal> _Sucursal;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEmpleadoChanging(int value);
    partial void OnIdEmpleadoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnAPaternoChanging(string value);
    partial void OnAPaternoChanged();
    partial void OnAMaternoChanging(string value);
    partial void OnAMaternoChanged();
    partial void OnCURPChanging(string value);
    partial void OnCURPChanged();
    partial void OnFechaNacimientoChanging(System.DateTime value);
    partial void OnFechaNacimientoChanged();
    partial void OnIdSucursalChanging(System.Nullable<int> value);
    partial void OnIdSucursalChanged();
    partial void OnSexoChanging(System.Nullable<int> value);
    partial void OnSexoChanged();
    partial void OnPuestoChanging(System.Nullable<int> value);
    partial void OnPuestoChanged();
    #endregion
		
		public Empleado()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			this._Venta = new EntitySet<Venta>(new Action<Venta>(this.attach_Venta), new Action<Venta>(this.detach_Venta));
			this._Puesto1 = default(EntityRef<Puesto>);
			this._Sexo1 = default(EntityRef<Sexo>);
			this._Sucursal = default(EntityRef<Sucursal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmpleado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdEmpleado
		{
			get
			{
				return this._IdEmpleado;
			}
			set
			{
				if ((this._IdEmpleado != value))
				{
					this.OnIdEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._IdEmpleado = value;
					this.SendPropertyChanged("IdEmpleado");
					this.OnIdEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APaterno", DbType="VarChar(50)")]
		public string APaterno
		{
			get
			{
				return this._APaterno;
			}
			set
			{
				if ((this._APaterno != value))
				{
					this.OnAPaternoChanging(value);
					this.SendPropertyChanging();
					this._APaterno = value;
					this.SendPropertyChanged("APaterno");
					this.OnAPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMaterno", DbType="VarChar(50)")]
		public string AMaterno
		{
			get
			{
				return this._AMaterno;
			}
			set
			{
				if ((this._AMaterno != value))
				{
					this.OnAMaternoChanging(value);
					this.SendPropertyChanging();
					this._AMaterno = value;
					this.SendPropertyChanged("AMaterno");
					this.OnAMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURP", DbType="VarChar(50)")]
		public string CURP
		{
			get
			{
				return this._CURP;
			}
			set
			{
				if ((this._CURP != value))
				{
					this.OnCURPChanging(value);
					this.SendPropertyChanging();
					this._CURP = value;
					this.SendPropertyChanged("CURP");
					this.OnCURPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaNacimiento", DbType="DateTime NOT NULL")]
		public System.DateTime FechaNacimiento
		{
			get
			{
				return this._FechaNacimiento;
			}
			set
			{
				if ((this._FechaNacimiento != value))
				{
					this.OnFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaNacimiento = value;
					this.SendPropertyChanged("FechaNacimiento");
					this.OnFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSucursal", DbType="Int")]
		public System.Nullable<int> IdSucursal
		{
			get
			{
				return this._IdSucursal;
			}
			set
			{
				if ((this._IdSucursal != value))
				{
					if (this._Sucursal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSucursalChanging(value);
					this.SendPropertyChanging();
					this._IdSucursal = value;
					this.SendPropertyChanged("IdSucursal");
					this.OnIdSucursalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="Int")]
		public System.Nullable<int> Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					if (this._Sexo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Puesto", DbType="Int")]
		public System.Nullable<int> Puesto
		{
			get
			{
				return this._Puesto;
			}
			set
			{
				if ((this._Puesto != value))
				{
					if (this._Puesto1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPuestoChanging(value);
					this.SendPropertyChanging();
					this._Puesto = value;
					this.SendPropertyChanged("Puesto");
					this.OnPuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Usuario", Storage="_Usuario", ThisKey="IdEmpleado", OtherKey="IdEmpleado")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Venta", Storage="_Venta", ThisKey="IdEmpleado", OtherKey="IdEmpleado")]
		public EntitySet<Venta> Venta
		{
			get
			{
				return this._Venta;
			}
			set
			{
				this._Venta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Puesto_Empleado", Storage="_Puesto1", ThisKey="Puesto", OtherKey="IdPuesto", IsForeignKey=true)]
		public Puesto Puesto1
		{
			get
			{
				return this._Puesto1.Entity;
			}
			set
			{
				Puesto previousValue = this._Puesto1.Entity;
				if (((previousValue != value) 
							|| (this._Puesto1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Puesto1.Entity = null;
						previousValue.Empleado.Remove(this);
					}
					this._Puesto1.Entity = value;
					if ((value != null))
					{
						value.Empleado.Add(this);
						this._Puesto = value.IdPuesto;
					}
					else
					{
						this._Puesto = default(Nullable<int>);
					}
					this.SendPropertyChanged("Puesto1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sexo_Empleado", Storage="_Sexo1", ThisKey="Sexo", OtherKey="IdSexo", IsForeignKey=true)]
		public Sexo Sexo1
		{
			get
			{
				return this._Sexo1.Entity;
			}
			set
			{
				Sexo previousValue = this._Sexo1.Entity;
				if (((previousValue != value) 
							|| (this._Sexo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sexo1.Entity = null;
						previousValue.Empleado.Remove(this);
					}
					this._Sexo1.Entity = value;
					if ((value != null))
					{
						value.Empleado.Add(this);
						this._Sexo = value.IdSexo;
					}
					else
					{
						this._Sexo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sexo1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sucursal_Empleado", Storage="_Sucursal", ThisKey="IdSucursal", OtherKey="IdSucursal", IsForeignKey=true)]
		public Sucursal Sucursal
		{
			get
			{
				return this._Sucursal.Entity;
			}
			set
			{
				Sucursal previousValue = this._Sucursal.Entity;
				if (((previousValue != value) 
							|| (this._Sucursal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sucursal.Entity = null;
						previousValue.Empleado.Remove(this);
					}
					this._Sucursal.Entity = value;
					if ((value != null))
					{
						value.Empleado.Add(this);
						this._IdSucursal = value.IdSucursal;
					}
					else
					{
						this._IdSucursal = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sucursal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
		
		private void attach_Venta(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_Venta(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producto")]
	public partial class Producto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProducto;
		
		private System.Nullable<decimal> _Precio;
		
		private System.Nullable<int> _TProductoId;
		
		private System.Nullable<int> _TAlimentoId;
		
		private System.Nullable<int> _TCarneID;
		
		private string _NombreProducto;
		
		private EntitySet<ProductoSucursal> _ProductoSucursal;
		
		private EntitySet<ProductosVenta> _ProductosVenta;
		
		private EntityRef<TipoAlimento> _TipoAlimento;
		
		private EntityRef<TipoCarne> _TipoCarne;
		
		private EntityRef<TipoProducto> _TipoProducto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductoChanging(int value);
    partial void OnIdProductoChanged();
    partial void OnPrecioChanging(System.Nullable<decimal> value);
    partial void OnPrecioChanged();
    partial void OnTProductoIdChanging(System.Nullable<int> value);
    partial void OnTProductoIdChanged();
    partial void OnTAlimentoIdChanging(System.Nullable<int> value);
    partial void OnTAlimentoIdChanged();
    partial void OnTCarneIDChanging(System.Nullable<int> value);
    partial void OnTCarneIDChanged();
    partial void OnNombreProductoChanging(string value);
    partial void OnNombreProductoChanged();
    #endregion
		
		public Producto()
		{
			this._ProductoSucursal = new EntitySet<ProductoSucursal>(new Action<ProductoSucursal>(this.attach_ProductoSucursal), new Action<ProductoSucursal>(this.detach_ProductoSucursal));
			this._ProductosVenta = new EntitySet<ProductosVenta>(new Action<ProductosVenta>(this.attach_ProductosVenta), new Action<ProductosVenta>(this.detach_ProductosVenta));
			this._TipoAlimento = default(EntityRef<TipoAlimento>);
			this._TipoCarne = default(EntityRef<TipoCarne>);
			this._TipoProducto = default(EntityRef<TipoProducto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProducto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProducto
		{
			get
			{
				return this._IdProducto;
			}
			set
			{
				if ((this._IdProducto != value))
				{
					this.OnIdProductoChanging(value);
					this.SendPropertyChanging();
					this._IdProducto = value;
					this.SendPropertyChanged("IdProducto");
					this.OnIdProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TProductoId", DbType="Int")]
		public System.Nullable<int> TProductoId
		{
			get
			{
				return this._TProductoId;
			}
			set
			{
				if ((this._TProductoId != value))
				{
					if (this._TipoProducto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTProductoIdChanging(value);
					this.SendPropertyChanging();
					this._TProductoId = value;
					this.SendPropertyChanged("TProductoId");
					this.OnTProductoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAlimentoId", DbType="Int")]
		public System.Nullable<int> TAlimentoId
		{
			get
			{
				return this._TAlimentoId;
			}
			set
			{
				if ((this._TAlimentoId != value))
				{
					if (this._TipoAlimento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTAlimentoIdChanging(value);
					this.SendPropertyChanging();
					this._TAlimentoId = value;
					this.SendPropertyChanged("TAlimentoId");
					this.OnTAlimentoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCarneID", DbType="Int")]
		public System.Nullable<int> TCarneID
		{
			get
			{
				return this._TCarneID;
			}
			set
			{
				if ((this._TCarneID != value))
				{
					if (this._TipoCarne.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTCarneIDChanging(value);
					this.SendPropertyChanging();
					this._TCarneID = value;
					this.SendPropertyChanged("TCarneID");
					this.OnTCarneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreProducto", DbType="VarChar(45)")]
		public string NombreProducto
		{
			get
			{
				return this._NombreProducto;
			}
			set
			{
				if ((this._NombreProducto != value))
				{
					this.OnNombreProductoChanging(value);
					this.SendPropertyChanging();
					this._NombreProducto = value;
					this.SendPropertyChanged("NombreProducto");
					this.OnNombreProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_ProductoSucursal", Storage="_ProductoSucursal", ThisKey="IdProducto", OtherKey="IdProducto")]
		public EntitySet<ProductoSucursal> ProductoSucursal
		{
			get
			{
				return this._ProductoSucursal;
			}
			set
			{
				this._ProductoSucursal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_ProductosVenta", Storage="_ProductosVenta", ThisKey="IdProducto", OtherKey="idProducto")]
		public EntitySet<ProductosVenta> ProductosVenta
		{
			get
			{
				return this._ProductosVenta;
			}
			set
			{
				this._ProductosVenta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAlimento_Producto", Storage="_TipoAlimento", ThisKey="TAlimentoId", OtherKey="IdTAlimento", IsForeignKey=true)]
		public TipoAlimento TipoAlimento
		{
			get
			{
				return this._TipoAlimento.Entity;
			}
			set
			{
				TipoAlimento previousValue = this._TipoAlimento.Entity;
				if (((previousValue != value) 
							|| (this._TipoAlimento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoAlimento.Entity = null;
						previousValue.Producto.Remove(this);
					}
					this._TipoAlimento.Entity = value;
					if ((value != null))
					{
						value.Producto.Add(this);
						this._TAlimentoId = value.IdTAlimento;
					}
					else
					{
						this._TAlimentoId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TipoAlimento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoCarne_Producto", Storage="_TipoCarne", ThisKey="TCarneID", OtherKey="IdTCarne", IsForeignKey=true)]
		public TipoCarne TipoCarne
		{
			get
			{
				return this._TipoCarne.Entity;
			}
			set
			{
				TipoCarne previousValue = this._TipoCarne.Entity;
				if (((previousValue != value) 
							|| (this._TipoCarne.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoCarne.Entity = null;
						previousValue.Producto.Remove(this);
					}
					this._TipoCarne.Entity = value;
					if ((value != null))
					{
						value.Producto.Add(this);
						this._TCarneID = value.IdTCarne;
					}
					else
					{
						this._TCarneID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TipoCarne");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoProducto_Producto", Storage="_TipoProducto", ThisKey="TProductoId", OtherKey="IdTProducyo", IsForeignKey=true)]
		public TipoProducto TipoProducto
		{
			get
			{
				return this._TipoProducto.Entity;
			}
			set
			{
				TipoProducto previousValue = this._TipoProducto.Entity;
				if (((previousValue != value) 
							|| (this._TipoProducto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoProducto.Entity = null;
						previousValue.Producto.Remove(this);
					}
					this._TipoProducto.Entity = value;
					if ((value != null))
					{
						value.Producto.Add(this);
						this._TProductoId = value.IdTProducyo;
					}
					else
					{
						this._TProductoId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TipoProducto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductoSucursal(ProductoSucursal entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_ProductoSucursal(ProductoSucursal entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
		
		private void attach_ProductosVenta(ProductosVenta entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_ProductosVenta(ProductosVenta entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductoSucursal")]
	public partial class ProductoSucursal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProducto;
		
		private int _IdSucursal;
		
		private System.Nullable<decimal> _Stock;
		
		private EntityRef<Producto> _Producto;
		
		private EntityRef<Sucursal> _Sucursal;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductoChanging(int value);
    partial void OnIdProductoChanged();
    partial void OnIdSucursalChanging(int value);
    partial void OnIdSucursalChanged();
    partial void OnStockChanging(System.Nullable<decimal> value);
    partial void OnStockChanged();
    #endregion
		
		public ProductoSucursal()
		{
			this._Producto = default(EntityRef<Producto>);
			this._Sucursal = default(EntityRef<Sucursal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProducto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProducto
		{
			get
			{
				return this._IdProducto;
			}
			set
			{
				if ((this._IdProducto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProductoChanging(value);
					this.SendPropertyChanging();
					this._IdProducto = value;
					this.SendPropertyChanged("IdProducto");
					this.OnIdProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSucursal", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdSucursal
		{
			get
			{
				return this._IdSucursal;
			}
			set
			{
				if ((this._IdSucursal != value))
				{
					if (this._Sucursal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSucursalChanging(value);
					this.SendPropertyChanging();
					this._IdSucursal = value;
					this.SendPropertyChanged("IdSucursal");
					this.OnIdSucursalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this.OnStockChanging(value);
					this.SendPropertyChanging();
					this._Stock = value;
					this.SendPropertyChanged("Stock");
					this.OnStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_ProductoSucursal", Storage="_Producto", ThisKey="IdProducto", OtherKey="IdProducto", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.ProductoSucursal.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.ProductoSucursal.Add(this);
						this._IdProducto = value.IdProducto;
					}
					else
					{
						this._IdProducto = default(int);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sucursal_ProductoSucursal", Storage="_Sucursal", ThisKey="IdSucursal", OtherKey="IdSucursal", IsForeignKey=true)]
		public Sucursal Sucursal
		{
			get
			{
				return this._Sucursal.Entity;
			}
			set
			{
				Sucursal previousValue = this._Sucursal.Entity;
				if (((previousValue != value) 
							|| (this._Sucursal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sucursal.Entity = null;
						previousValue.ProductoSucursal.Remove(this);
					}
					this._Sucursal.Entity = value;
					if ((value != null))
					{
						value.ProductoSucursal.Add(this);
						this._IdSucursal = value.IdSucursal;
					}
					else
					{
						this._IdSucursal = default(int);
					}
					this.SendPropertyChanged("Sucursal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductosVenta")]
	public partial class ProductosVenta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idProducto;
		
		private int _idVenta;
		
		private System.Nullable<decimal> _PrecioVenta;
		
		private System.Nullable<int> _cantidad;
		
		private EntityRef<Producto> _Producto;
		
		private EntityRef<Venta> _Venta;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidProductoChanging(int value);
    partial void OnidProductoChanged();
    partial void OnidVentaChanging(int value);
    partial void OnidVentaChanged();
    partial void OnPrecioVentaChanging(System.Nullable<decimal> value);
    partial void OnPrecioVentaChanged();
    partial void OncantidadChanging(System.Nullable<int> value);
    partial void OncantidadChanged();
    #endregion
		
		public ProductosVenta()
		{
			this._Producto = default(EntityRef<Producto>);
			this._Venta = default(EntityRef<Venta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProducto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idProducto
		{
			get
			{
				return this._idProducto;
			}
			set
			{
				if ((this._idProducto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProductoChanging(value);
					this.SendPropertyChanging();
					this._idProducto = value;
					this.SendPropertyChanged("idProducto");
					this.OnidProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idVenta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idVenta
		{
			get
			{
				return this._idVenta;
			}
			set
			{
				if ((this._idVenta != value))
				{
					if (this._Venta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidVentaChanging(value);
					this.SendPropertyChanging();
					this._idVenta = value;
					this.SendPropertyChanged("idVenta");
					this.OnidVentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioVenta", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PrecioVenta
		{
			get
			{
				return this._PrecioVenta;
			}
			set
			{
				if ((this._PrecioVenta != value))
				{
					this.OnPrecioVentaChanging(value);
					this.SendPropertyChanging();
					this._PrecioVenta = value;
					this.SendPropertyChanged("PrecioVenta");
					this.OnPrecioVentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cantidad", DbType="Int")]
		public System.Nullable<int> cantidad
		{
			get
			{
				return this._cantidad;
			}
			set
			{
				if ((this._cantidad != value))
				{
					this.OncantidadChanging(value);
					this.SendPropertyChanging();
					this._cantidad = value;
					this.SendPropertyChanged("cantidad");
					this.OncantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_ProductosVenta", Storage="_Producto", ThisKey="idProducto", OtherKey="IdProducto", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.ProductosVenta.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.ProductosVenta.Add(this);
						this._idProducto = value.IdProducto;
					}
					else
					{
						this._idProducto = default(int);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venta_ProductosVenta", Storage="_Venta", ThisKey="idVenta", OtherKey="IdVenta", IsForeignKey=true)]
		public Venta Venta
		{
			get
			{
				return this._Venta.Entity;
			}
			set
			{
				Venta previousValue = this._Venta.Entity;
				if (((previousValue != value) 
							|| (this._Venta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Venta.Entity = null;
						previousValue.ProductosVenta.Remove(this);
					}
					this._Venta.Entity = value;
					if ((value != null))
					{
						value.ProductosVenta.Add(this);
						this._idVenta = value.IdVenta;
					}
					else
					{
						this._idVenta = default(int);
					}
					this.SendPropertyChanged("Venta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Puesto")]
	public partial class Puesto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPuesto;
		
		private string _Nombre;
		
		private EntitySet<Empleado> _Empleado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPuestoChanging(int value);
    partial void OnIdPuestoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Puesto()
		{
			this._Empleado = new EntitySet<Empleado>(new Action<Empleado>(this.attach_Empleado), new Action<Empleado>(this.detach_Empleado));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPuesto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPuesto
		{
			get
			{
				return this._IdPuesto;
			}
			set
			{
				if ((this._IdPuesto != value))
				{
					this.OnIdPuestoChanging(value);
					this.SendPropertyChanging();
					this._IdPuesto = value;
					this.SendPropertyChanged("IdPuesto");
					this.OnIdPuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Puesto_Empleado", Storage="_Empleado", ThisKey="IdPuesto", OtherKey="Puesto")]
		public EntitySet<Empleado> Empleado
		{
			get
			{
				return this._Empleado;
			}
			set
			{
				this._Empleado.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Puesto1 = this;
		}
		
		private void detach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Puesto1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sexo")]
	public partial class Sexo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSexo;
		
		private string _Nombre;
		
		private EntitySet<Empleado> _Empleado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSexoChanging(int value);
    partial void OnIdSexoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Sexo()
		{
			this._Empleado = new EntitySet<Empleado>(new Action<Empleado>(this.attach_Empleado), new Action<Empleado>(this.detach_Empleado));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSexo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSexo
		{
			get
			{
				return this._IdSexo;
			}
			set
			{
				if ((this._IdSexo != value))
				{
					this.OnIdSexoChanging(value);
					this.SendPropertyChanging();
					this._IdSexo = value;
					this.SendPropertyChanged("IdSexo");
					this.OnIdSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sexo_Empleado", Storage="_Empleado", ThisKey="IdSexo", OtherKey="Sexo")]
		public EntitySet<Empleado> Empleado
		{
			get
			{
				return this._Empleado;
			}
			set
			{
				this._Empleado.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Sexo1 = this;
		}
		
		private void detach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Sexo1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sucursal")]
	public partial class Sucursal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSucursal;
		
		private string _Nombre;
		
		private string _Direccion;
		
		private EntitySet<Empleado> _Empleado;
		
		private EntitySet<ProductoSucursal> _ProductoSucursal;
		
		private EntitySet<Venta> _Venta;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSucursalChanging(int value);
    partial void OnIdSucursalChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    #endregion
		
		public Sucursal()
		{
			this._Empleado = new EntitySet<Empleado>(new Action<Empleado>(this.attach_Empleado), new Action<Empleado>(this.detach_Empleado));
			this._ProductoSucursal = new EntitySet<ProductoSucursal>(new Action<ProductoSucursal>(this.attach_ProductoSucursal), new Action<ProductoSucursal>(this.detach_ProductoSucursal));
			this._Venta = new EntitySet<Venta>(new Action<Venta>(this.attach_Venta), new Action<Venta>(this.detach_Venta));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSucursal", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSucursal
		{
			get
			{
				return this._IdSucursal;
			}
			set
			{
				if ((this._IdSucursal != value))
				{
					this.OnIdSucursalChanging(value);
					this.SendPropertyChanging();
					this._IdSucursal = value;
					this.SendPropertyChanged("IdSucursal");
					this.OnIdSucursalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(100)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sucursal_Empleado", Storage="_Empleado", ThisKey="IdSucursal", OtherKey="IdSucursal")]
		public EntitySet<Empleado> Empleado
		{
			get
			{
				return this._Empleado;
			}
			set
			{
				this._Empleado.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sucursal_ProductoSucursal", Storage="_ProductoSucursal", ThisKey="IdSucursal", OtherKey="IdSucursal")]
		public EntitySet<ProductoSucursal> ProductoSucursal
		{
			get
			{
				return this._ProductoSucursal;
			}
			set
			{
				this._ProductoSucursal.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sucursal_Venta", Storage="_Venta", ThisKey="IdSucursal", OtherKey="IdSucursal")]
		public EntitySet<Venta> Venta
		{
			get
			{
				return this._Venta;
			}
			set
			{
				this._Venta.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Sucursal = this;
		}
		
		private void detach_Empleado(Empleado entity)
		{
			this.SendPropertyChanging();
			entity.Sucursal = null;
		}
		
		private void attach_ProductoSucursal(ProductoSucursal entity)
		{
			this.SendPropertyChanging();
			entity.Sucursal = this;
		}
		
		private void detach_ProductoSucursal(ProductoSucursal entity)
		{
			this.SendPropertyChanging();
			entity.Sucursal = null;
		}
		
		private void attach_Venta(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Sucursal = this;
		}
		
		private void detach_Venta(Venta entity)
		{
			this.SendPropertyChanging();
			entity.Sucursal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoAlimento")]
	public partial class TipoAlimento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTAlimento;
		
		private string _Nombre;
		
		private EntitySet<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTAlimentoChanging(int value);
    partial void OnIdTAlimentoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TipoAlimento()
		{
			this._Producto = new EntitySet<Producto>(new Action<Producto>(this.attach_Producto), new Action<Producto>(this.detach_Producto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTAlimento", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTAlimento
		{
			get
			{
				return this._IdTAlimento;
			}
			set
			{
				if ((this._IdTAlimento != value))
				{
					this.OnIdTAlimentoChanging(value);
					this.SendPropertyChanging();
					this._IdTAlimento = value;
					this.SendPropertyChanged("IdTAlimento");
					this.OnIdTAlimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoAlimento_Producto", Storage="_Producto", ThisKey="IdTAlimento", OtherKey="TAlimentoId")]
		public EntitySet<Producto> Producto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				this._Producto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.TipoAlimento = this;
		}
		
		private void detach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.TipoAlimento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoCarne")]
	public partial class TipoCarne : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTCarne;
		
		private string _Nombre;
		
		private EntitySet<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTCarneChanging(int value);
    partial void OnIdTCarneChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TipoCarne()
		{
			this._Producto = new EntitySet<Producto>(new Action<Producto>(this.attach_Producto), new Action<Producto>(this.detach_Producto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTCarne", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTCarne
		{
			get
			{
				return this._IdTCarne;
			}
			set
			{
				if ((this._IdTCarne != value))
				{
					this.OnIdTCarneChanging(value);
					this.SendPropertyChanging();
					this._IdTCarne = value;
					this.SendPropertyChanged("IdTCarne");
					this.OnIdTCarneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoCarne_Producto", Storage="_Producto", ThisKey="IdTCarne", OtherKey="TCarneID")]
		public EntitySet<Producto> Producto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				this._Producto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.TipoCarne = this;
		}
		
		private void detach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.TipoCarne = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoProducto")]
	public partial class TipoProducto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTProducyo;
		
		private string _Nombre;
		
		private EntitySet<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTProducyoChanging(int value);
    partial void OnIdTProducyoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TipoProducto()
		{
			this._Producto = new EntitySet<Producto>(new Action<Producto>(this.attach_Producto), new Action<Producto>(this.detach_Producto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTProducyo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTProducyo
		{
			get
			{
				return this._IdTProducyo;
			}
			set
			{
				if ((this._IdTProducyo != value))
				{
					this.OnIdTProducyoChanging(value);
					this.SendPropertyChanging();
					this._IdTProducyo = value;
					this.SendPropertyChanged("IdTProducyo");
					this.OnIdTProducyoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoProducto_Producto", Storage="_Producto", ThisKey="IdTProducyo", OtherKey="TProductoId")]
		public EntitySet<Producto> Producto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				this._Producto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.TipoProducto = this;
		}
		
		private void detach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.TipoProducto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoUsuario")]
	public partial class TipoUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTipoUsuario;
		
		private string _Nombre;
		
		private EntitySet<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoUsuarioChanging(int value);
    partial void OnIdTipoUsuarioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public TipoUsuario()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTipoUsuario
		{
			get
			{
				return this._IdTipoUsuario;
			}
			set
			{
				if ((this._IdTipoUsuario != value))
				{
					this.OnIdTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdTipoUsuario = value;
					this.SendPropertyChanged("IdTipoUsuario");
					this.OnIdTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_Usuario", Storage="_Usuario", ThisKey="IdTipoUsuario", OtherKey="TipoUsuario")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario1 = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUsuario;
		
		private string _Usuario1;
		
		private string _Contrasenia;
		
		private System.Nullable<int> _TipoUsuario;
		
		private System.Nullable<int> _IdEmpleado;
		
		private EntityRef<Empleado> _Empleado;
		
		private EntityRef<TipoUsuario> _TipoUsuario1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUsuarioChanging(int value);
    partial void OnIdUsuarioChanged();
    partial void OnUsuario1Changing(string value);
    partial void OnUsuario1Changed();
    partial void OnContraseniaChanging(string value);
    partial void OnContraseniaChanged();
    partial void OnTipoUsuarioChanging(System.Nullable<int> value);
    partial void OnTipoUsuarioChanged();
    partial void OnIdEmpleadoChanging(System.Nullable<int> value);
    partial void OnIdEmpleadoChanged();
    #endregion
		
		public Usuario()
		{
			this._Empleado = default(EntityRef<Empleado>);
			this._TipoUsuario1 = default(EntityRef<TipoUsuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Usuario", Storage="_Usuario1", DbType="VarChar(45)")]
		public string Usuario1
		{
			get
			{
				return this._Usuario1;
			}
			set
			{
				if ((this._Usuario1 != value))
				{
					this.OnUsuario1Changing(value);
					this.SendPropertyChanging();
					this._Usuario1 = value;
					this.SendPropertyChanged("Usuario1");
					this.OnUsuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contrasenia", DbType="VarChar(50)")]
		public string Contrasenia
		{
			get
			{
				return this._Contrasenia;
			}
			set
			{
				if ((this._Contrasenia != value))
				{
					this.OnContraseniaChanging(value);
					this.SendPropertyChanging();
					this._Contrasenia = value;
					this.SendPropertyChanged("Contrasenia");
					this.OnContraseniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoUsuario", DbType="Int")]
		public System.Nullable<int> TipoUsuario
		{
			get
			{
				return this._TipoUsuario;
			}
			set
			{
				if ((this._TipoUsuario != value))
				{
					if (this._TipoUsuario1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._TipoUsuario = value;
					this.SendPropertyChanged("TipoUsuario");
					this.OnTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmpleado", DbType="Int")]
		public System.Nullable<int> IdEmpleado
		{
			get
			{
				return this._IdEmpleado;
			}
			set
			{
				if ((this._IdEmpleado != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._IdEmpleado = value;
					this.SendPropertyChanged("IdEmpleado");
					this.OnIdEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Usuario", Storage="_Empleado", ThisKey="IdEmpleado", OtherKey="IdEmpleado", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._IdEmpleado = value.IdEmpleado;
					}
					else
					{
						this._IdEmpleado = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUsuario_Usuario", Storage="_TipoUsuario1", ThisKey="TipoUsuario", OtherKey="IdTipoUsuario", IsForeignKey=true)]
		public TipoUsuario TipoUsuario1
		{
			get
			{
				return this._TipoUsuario1.Entity;
			}
			set
			{
				TipoUsuario previousValue = this._TipoUsuario1.Entity;
				if (((previousValue != value) 
							|| (this._TipoUsuario1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoUsuario1.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._TipoUsuario1.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._TipoUsuario = value.IdTipoUsuario;
					}
					else
					{
						this._TipoUsuario = default(Nullable<int>);
					}
					this.SendPropertyChanged("TipoUsuario1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Venta")]
	public partial class Venta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdVenta;
		
		private System.Nullable<System.DateTime> _FechayHora;
		
		private System.Nullable<int> _IdEmpleado;
		
		private System.Nullable<int> _IdSucursal;
		
		private System.Nullable<decimal> _CobroTotal;
		
		private EntitySet<ProductosVenta> _ProductosVenta;
		
		private EntityRef<Empleado> _Empleado;
		
		private EntityRef<Sucursal> _Sucursal;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVentaChanging(int value);
    partial void OnIdVentaChanged();
    partial void OnFechayHoraChanging(System.Nullable<System.DateTime> value);
    partial void OnFechayHoraChanged();
    partial void OnIdEmpleadoChanging(System.Nullable<int> value);
    partial void OnIdEmpleadoChanged();
    partial void OnIdSucursalChanging(System.Nullable<int> value);
    partial void OnIdSucursalChanged();
    partial void OnCobroTotalChanging(System.Nullable<decimal> value);
    partial void OnCobroTotalChanged();
    #endregion
		
		public Venta()
		{
			this._ProductosVenta = new EntitySet<ProductosVenta>(new Action<ProductosVenta>(this.attach_ProductosVenta), new Action<ProductosVenta>(this.detach_ProductosVenta));
			this._Empleado = default(EntityRef<Empleado>);
			this._Sucursal = default(EntityRef<Sucursal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVenta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdVenta
		{
			get
			{
				return this._IdVenta;
			}
			set
			{
				if ((this._IdVenta != value))
				{
					this.OnIdVentaChanging(value);
					this.SendPropertyChanging();
					this._IdVenta = value;
					this.SendPropertyChanged("IdVenta");
					this.OnIdVentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechayHora", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechayHora
		{
			get
			{
				return this._FechayHora;
			}
			set
			{
				if ((this._FechayHora != value))
				{
					this.OnFechayHoraChanging(value);
					this.SendPropertyChanging();
					this._FechayHora = value;
					this.SendPropertyChanged("FechayHora");
					this.OnFechayHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmpleado", DbType="Int")]
		public System.Nullable<int> IdEmpleado
		{
			get
			{
				return this._IdEmpleado;
			}
			set
			{
				if ((this._IdEmpleado != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._IdEmpleado = value;
					this.SendPropertyChanged("IdEmpleado");
					this.OnIdEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSucursal", DbType="Int")]
		public System.Nullable<int> IdSucursal
		{
			get
			{
				return this._IdSucursal;
			}
			set
			{
				if ((this._IdSucursal != value))
				{
					if (this._Sucursal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSucursalChanging(value);
					this.SendPropertyChanging();
					this._IdSucursal = value;
					this.SendPropertyChanged("IdSucursal");
					this.OnIdSucursalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CobroTotal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CobroTotal
		{
			get
			{
				return this._CobroTotal;
			}
			set
			{
				if ((this._CobroTotal != value))
				{
					this.OnCobroTotalChanging(value);
					this.SendPropertyChanging();
					this._CobroTotal = value;
					this.SendPropertyChanged("CobroTotal");
					this.OnCobroTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venta_ProductosVenta", Storage="_ProductosVenta", ThisKey="IdVenta", OtherKey="idVenta")]
		public EntitySet<ProductosVenta> ProductosVenta
		{
			get
			{
				return this._ProductosVenta;
			}
			set
			{
				this._ProductosVenta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_Venta", Storage="_Empleado", ThisKey="IdEmpleado", OtherKey="IdEmpleado", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.Venta.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.Venta.Add(this);
						this._IdEmpleado = value.IdEmpleado;
					}
					else
					{
						this._IdEmpleado = default(Nullable<int>);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sucursal_Venta", Storage="_Sucursal", ThisKey="IdSucursal", OtherKey="IdSucursal", IsForeignKey=true)]
		public Sucursal Sucursal
		{
			get
			{
				return this._Sucursal.Entity;
			}
			set
			{
				Sucursal previousValue = this._Sucursal.Entity;
				if (((previousValue != value) 
							|| (this._Sucursal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sucursal.Entity = null;
						previousValue.Venta.Remove(this);
					}
					this._Sucursal.Entity = value;
					if ((value != null))
					{
						value.Venta.Add(this);
						this._IdSucursal = value.IdSucursal;
					}
					else
					{
						this._IdSucursal = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sucursal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductosVenta(ProductosVenta entity)
		{
			this.SendPropertyChanging();
			entity.Venta = this;
		}
		
		private void detach_ProductosVenta(ProductosVenta entity)
		{
			this.SendPropertyChanging();
			entity.Venta = null;
		}
	}
}
#pragma warning restore 1591
